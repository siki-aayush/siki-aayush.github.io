{"version":3,"sources":["Interfaces.tsx","components/NavLinks.tsx","components/Navbar.tsx","images/profile.jpg","components/Home.tsx","images/about_img.jpg","components/About.tsx","programmingIcon.tsx","components/ProjectCard.tsx","components/Projects.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Page","NavLinks","currentPage","onPageChange","className","to","onClick","home","about","projects","Nav","useState","menu","setMenu","onHamburgerBtnClose","prevState","document","querySelectorAll","forEach","elem","classList","add","setTimeout","remove","href","size","style","cursor","Home","setCurrentPage","useEffect","src","profile","alt","About","ProfileImg","insertIcon","lang","color","title","opacity","ProjectCard","repo","name","replaceAll","charAt","toUpperCase","slice","description","languages","map","toLowerCase","fork","window","open","url","homepage","disabled","has_pages","Projects","useQuery","a","axios","method","headers","Accept","then","resp","data","all_data","Promise","all","get","languages_url","Object","keys","html_url","process_data","isLoading","error","message","index","App","height","path","render","props","page","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","StrictMode","client","getElementById"],"mappings":"yIAAYA,E,0FAAAA,K,YAAAA,E,cAAAA,E,qBAAAA,M,gBCoDGC,EA3CE,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,aAC7B,OACI,qCACI,qBAAKC,UAAU,eAAf,SACI,eAAC,IAAD,CACIC,GAAG,IACHD,UAAU,qBACVE,QAASH,EAHb,iBAMKD,IAAgBF,EAAKO,MAClB,qBAAKH,UAAU,iCAI3B,qBAAKA,UAAU,eAAf,SACI,eAAC,IAAD,CACIC,GAAG,SACHD,UAAU,sBACVE,QAASH,EAHb,kBAMKD,IAAgBF,EAAKQ,OAClB,qBAAKJ,UAAU,iCAI3B,qBAAKA,UAAU,eAAf,SACI,eAAC,IAAD,CACIC,GAAG,YACHD,UAAU,yBACVE,QAASH,EAHb,qBAMKD,IAAgBF,EAAKS,UAClB,qBAAKL,UAAU,qC,QCgDxBM,EAlFH,SAAC,GAA+B,IAA7BR,EAA4B,EAA5BA,YACX,EAAwBS,oBAAkB,GAA1C,mBAAOC,EAAP,KAAaC,EAAb,KAKMV,EAAe,WAEjBS,GAAQE,KAINA,EAAsB,WACxBD,GAAQ,SAACE,GAAD,OAAgBA,KACxBC,SACKC,iBAAiB,0CACjBC,SAAQ,SAACC,GAENA,EAAKC,UAAUC,IAAI,WACnBC,YACI,kBAAMH,EAAKC,UAAUG,OAAO,aAhBrB,SAqCvB,OACI,yBAAQnB,UAAU,2BAAlB,UACI,qBAAKA,UAAU,YAAf,SACI,mBAAGoB,KAAK,IAAR,0BAEJ,qBAAKpB,UAAU,mBAAf,SACI,cAAC,EAAD,CACIF,YAAaA,EACbC,aAAcA,MAGtB,sBAAKC,UAAU,iBAAf,WACc,IAATQ,EACG,cAAC,IAAD,CACIa,KAAM,GACNC,MAAO,CAAEC,OAAQ,WACjBrB,QAASQ,IAGb,cAAC,IAAD,CACIW,KAAM,GACNC,MAAO,CAAEC,OAAQ,WACjBrB,QApCO,WACvBO,GAAQ,SAACE,GAAD,OAAgBA,KACxBC,SACKC,iBAAiB,0CACjBC,SAAQ,SAACC,GAENA,EAAKC,UAAUC,IAAI,aACnBC,YACI,kBAAMH,EAAKC,UAAUG,OAAO,eA/BrB,WA+DX,qBACInB,UAAS,qDACLQ,EAAO,GAAK,QAFpB,SAKI,cAAC,EAAD,CACIV,YAAaA,EACbC,aAAcA,a,wBCpFvB,MAA0B,oCCuE1ByB,EA7DF,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,eACZC,qBAAU,kBAAMD,EAAe7B,EAAKO,QAAO,CAACsB,IAI5C,OACI,sBAAKzB,UAAU,2BAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAK2B,IAAKC,EAASC,IAAI,GAAG7B,UAAU,wBACpC,sBAAKA,UAAU,gCAAf,UACI,cAAC,IAAD,CAAQA,UAAU,2BAClB,+BATH,+BAWD,sBAAKA,UAAU,oCAAf,UACI,cAAC,IAAD,CAAiBA,UAAU,+BAC3B,+BAZC,2BAgBT,qBAAKA,UAAU,oBACf,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,qBAAf,iBACQ,uBADR,wBAGA,sBAAKA,UAAU,qBAAf,UACI,mBAAGoB,KAAK,IAAIpB,UAAU,eAAtB,SACI,cAAC,IAAD,CAAUA,UAAU,gBAKxB,mBAAGoB,KAAK,IAAIpB,UAAU,gBAAtB,SACI,cAAC,IAAD,CAAWA,UAAU,gBAKzB,mBAAGoB,KAAK,IAAIpB,UAAU,iBAAtB,SACI,cAAC,IAAD,CAAYA,UAAU,gBAE1B,mBAAGoB,KAAK,IAAIpB,UAAU,iBAAtB,SACI,cAAC,IAAD,CAAYA,UAAU,mBAG9B,qBAAKA,UAAU,qBAAf,yUCtDD,MAA0B,sCC2C1B8B,EAvCD,SAAC,GAAyC,IAAvCL,EAAsC,EAAtCA,eAEb,OADAC,qBAAU,kBAAMD,EAAe7B,EAAKQ,SAAQ,CAACqB,IAEzC,sBAAKzB,UAAU,QAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAK2B,IAAKI,EAAYF,IAAI,OAE9B,sBAAK7B,UAAU,qBAAf,UACI,oBAAIA,UAAU,8BAAd,mBACA,oBAAGA,UAAU,wBAAb,6jBAWI,uBACA,uBAZJ,uI,kEC2LDgC,EAvLI,SAACC,GAChB,OAAQA,GACJ,IAAK,IACL,IAAK,cACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,uBACVkC,MAAM,UACNC,MAAOF,EAEPX,MAAO,CAAEc,QAAS,OAClBb,OAAO,WAFFU,GAKjB,IAAK,QACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,2BACVkC,MAAM,UACNX,OAAO,UACPY,MAAOF,GACFA,GAGjB,IAAK,aACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,gCACVkC,MAAM,UACNX,OAAO,UACPY,MAAOF,GACFA,GAIjB,IAAK,OACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,0BACVkC,MAAM,UACNX,OAAO,UACPY,MAAOF,GACFA,GAIjB,IAAK,aACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,4BACVkC,MAAM,UACNX,OAAO,UACPY,MAAOF,GACFA,GAIjB,IAAK,QACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,2BACVkC,MAAM,UACNX,OAAO,WACFU,GAIjB,IAAK,OACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,2BACVkC,MAAM,UACNX,OAAO,WACFU,GAIjB,IAAK,SACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,4BACVkC,MAAM,UACNX,OAAO,UACPY,MAAOF,GACFA,GAIjB,IAAK,OACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,0BACVkC,MAAM,UACNX,OAAO,UACPY,MAAOF,GACFA,GAIjB,IAAK,MACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,yBACVkC,MAAM,WACNX,OAAO,UACPY,MAAOF,GACFA,GAIjB,IAAK,aACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,wBACVkC,MAAM,UACNX,OAAO,UACPY,MAAOF,GACFA,GAIjB,IAAK,mBACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,6BACVkC,MAAM,UACNX,OAAO,UACPY,MAAOF,GACFA,GAIjB,IAAK,aACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,yBACVkC,MAAM,UACNX,OAAO,UACPY,MAAOF,GACFA,GAIjB,IAAK,OACD,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,0BACVkC,MAAM,OACNX,OAAO,UACPY,MAAOF,GACFA,GAIjB,QACI,OACI,cAAC,IAAD,CACIZ,KAAK,OACLrB,UAAU,4BACVkC,MAAM,UACNX,OAAO,UACPY,MAAOF,EAEPX,MAAO,CAAEc,QAAS,QADbH,K,QC1JVI,EA/BK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAInB,OAHAA,EAAKC,KAAOD,EAAKC,KAAKC,WAAW,IAAK,KACtCF,EAAKC,KAAOD,EAAKC,KAAKC,WAAW,IAAK,KACtCF,EAAKC,KAAOD,EAAKC,KAAKE,OAAO,GAAGC,cAAgBJ,EAAKC,KAAKI,MAAM,GAE5D,sBAAK3C,UAAU,cAAf,UACI,qBAAKA,UAAU,qBAAf,SAAqCsC,EAAKC,OAC1C,qBAAKvC,UAAU,oBAAf,SAAoCsC,EAAKM,cACzC,sBAAK5C,UAAU,oBAAf,UACKsC,EAAKO,UAAUC,KAAI,SAACb,GAAD,OAAUD,EAAWC,EAAKc,kBAC7CT,EAAKU,KAAOhB,EAAW,QAAU,QAEtC,sBAAKhC,UAAU,gCAAf,UACI,yBACIA,UAAU,6CACVE,QAAS,kBAAM+C,OAAOC,KAAKZ,EAAKa,MAFpC,UAII,cAAC,IAAD,IAJJ,iBAMA,yBACInD,UAAU,8CACVE,QAAS,kBAAM+C,OAAOC,KAAKZ,EAAKc,WAChCC,UAAWf,EAAKgB,UAHpB,UAKI,cAAC,IAAD,IALJ,qBCiFDC,EA7EE,SAAC,GAAyC,IAAvC9B,EAAsC,EAAtCA,eAClBC,qBAAU,kBAAMD,EAAe7B,EAAKS,YAAW,CAACoB,IAChD,MAAmC+B,mBACjC,QADyC,sBAEzC,8BAAAC,EAAA,sEACyBC,IAAM,CAC3BP,IAAK,iDACLQ,OAAQ,MACRC,QAAS,CACPC,OAAQ,oCAGTC,MAAK,SAACC,GAAD,OAAUA,EAAKC,QARzB,cACQC,EADR,gBAU2CC,QAAQC,IAC/CF,EAASnB,IAAT,+BAAAW,EAAA,MAAa,WAAOnB,GAAP,eAAAmB,EAAA,sEACQC,IAAMU,IAAI9B,EAAK+B,eAAeP,MAAK,SAACC,GACrD,OAAOO,OAAOC,KAAKR,EAAKC,SAFf,cACL/B,EADK,yBAIJ,CACLM,KAAMD,EAAKC,KACXK,YAAaN,EAAKM,YAClBO,IAAKb,EAAKkC,SACV3B,UAAWZ,EACXqB,UAAWhB,EAAKgB,UAChBF,SAAUd,EAAKc,SACfJ,KAAMV,EAAKU,OAXF,2CAAb,wDAXJ,cAUQyB,EAVR,yBA2BSA,GA3BT,4CAFMT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,MA8CzB,OAAID,EAAkB,cAAC,IAAD,CAAW1E,UAAU,sBACvC2E,EAAc,8BAAMA,EAAMC,UAoB5B,qBAAK5E,UAAU,+BAAf,SACGgE,EAAMlB,KAAI,SAACR,EAAkBuC,GAAnB,OACT,cAAC,EAAD,CAAqCvC,KAAMA,GAAzBA,EAAKC,KAAOsC,S,OC5CvBC,MA/Cf,WACI,MAAsCvE,mBAAeX,EAAKO,MAA1D,mBAAOL,EAAP,KAAoB2B,EAApB,KAEA,OACI,cAAC,IAAD,UACI,sBAAKzB,UAAU,MAAMsB,MAAO,CAAEyD,OAAQ,SAAtC,UACI,cAAC,EAAD,CAAKjF,YAAaA,IAClB,cAAC,IAAD,CACIkF,KAAK,SACLC,OAAQ,SAACC,GAAD,OACJ,cAAC,EAAD,2BACQA,GADR,IAEIzD,eAAgB,SAAC0D,GAAD,OACZ1D,EAAe0D,UAM/B,cAAC,IAAD,CACIH,KAAK,YACLC,OAAQ,SAACC,GAAD,OACJ,cAAC,EAAD,2BACQA,GADR,IAEIzD,eAAgB,SAAC0D,GAAD,OACZ1D,EAAe0D,UAK/B,cAAC,IAAD,CACIH,KAAK,IACLC,OAAQ,SAACC,GAAD,OACJ,cAAC,EAAD,2BACQA,GADR,IAEIzD,eAAgB,SAAC0D,GAAD,OACZ1D,EAAe0D,QAI3BC,OAAK,UCrCVC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDRO,EAAc,IAAIC,cAExBC,IAASd,OACL,cAAC,IAAMe,WAAP,UACI,cAAC,sBAAD,CAAqBC,OAAQJ,EAA7B,SACI,cAAC,EAAD,QAGRjF,SAASsF,eAAe,SAM5Bb,K","file":"static/js/main.4f9023b7.chunk.js","sourcesContent":["export enum Page {\n    home = \"home\",\n    about = \"about\",\n    projects = \"projects\",\n}\n\n//interface language {\n//    name: string;\n//    color: string;\n//}\n\n//type language = string[];\n\nexport interface repository {\n    name: string;\n    description: string;\n    url: string;\n    languages: string[];\n    has_pages: boolean;\n    homepage: string;\n    fork: boolean;\n}\n\nexport interface changePageState {\n    setCurrentPage: (page: Page) => void;\n}\n","import { Link } from \"react-router-dom\";\n\nimport { Page } from \"../Interfaces\";\n\ninterface navProps {\n    currentPage: Page;\n    onPageChange: () => void;\n}\n\nconst NavLinks = ({ currentPage, onPageChange }: navProps) => {\n    return (\n        <>\n            <div className=\"nav__element\">\n                <Link\n                    to=\"/\"\n                    className=\"nav__element__home\"\n                    onClick={onPageChange}\n                >\n                    Home\n                    {currentPage === Page.home && (\n                        <div className=\"nav__element__highlight\" />\n                    )}\n                </Link>\n            </div>\n            <div className=\"nav__element\">\n                <Link\n                    to=\"/about\"\n                    className=\"nav__element__about\"\n                    onClick={onPageChange}\n                >\n                    About\n                    {currentPage === Page.about && (\n                        <div className=\"nav__element__highlight\" />\n                    )}\n                </Link>\n            </div>\n            <div className=\"nav__element\">\n                <Link\n                    to=\"/projects\"\n                    className=\"nav__element__projects\"\n                    onClick={onPageChange}\n                >\n                    Projects\n                    {currentPage === Page.projects && (\n                        <div className=\"nav__element__highlight\" />\n                    )}\n                </Link>\n            </div>\n        </>\n    );\n};\n\nexport default NavLinks;\n","import { useState } from \"react\";\n\nimport { Page } from \"../Interfaces\";\nimport NavLinks from \"./NavLinks\";\nimport { IoMenu, IoClose } from \"react-icons/io5\";\n\ninterface navProps {\n    currentPage: Page;\n}\n\nconst Nav = ({ currentPage }: navProps) => {\n    const [menu, setMenu] = useState<Boolean>(false);\n\n    // Animation time -> 100 ms higher than scss animation time\n    const ANIMATION_TIME = 500;\n\n    const onPageChange = () => {\n        //setCurrentPage(newPage);\n        menu && onHamburgerBtnClose();\n    };\n\n    // Animation of closing burger menu\n    const onHamburgerBtnClose = () => {\n        setMenu((prevState) => !prevState);\n        document\n            .querySelectorAll(\".nav__mobileNav__links .nav__element a\")\n            .forEach((elem) => {\n                //elem.classList.remove(\"move-down\");\n                elem.classList.add(\"move-up\");\n                setTimeout(\n                    () => elem.classList.remove(\"move-up\"),\n                    ANIMATION_TIME\n                );\n            });\n    };\n\n    // Animation of opening burger mennu\n    const onHamburgerBtnOpen = () => {\n        setMenu((prevState) => !prevState);\n        document\n            .querySelectorAll(\".nav__mobileNav__links .nav__element a\")\n            .forEach((elem) => {\n                //elem.classList.remove(\"move-up\");\n                elem.classList.add(\"move-down\");\n                setTimeout(\n                    () => elem.classList.remove(\"move-down\"),\n                    ANIMATION_TIME\n                );\n            });\n    };\n\n    return (\n        <header className=\"nav flex flex-ac flex-sb\">\n            <div className=\"nav__left\">\n                <a href=\"/\">SikiAayush</a>\n            </div>\n            <div className=\"nav__webNav flex\">\n                <NavLinks\n                    currentPage={currentPage}\n                    onPageChange={onPageChange}\n                />\n            </div>\n            <div className=\"nav__mobileNav\">\n                {menu === true ? (\n                    <IoClose\n                        size={20}\n                        style={{ cursor: \"pointer\" }}\n                        onClick={onHamburgerBtnClose}\n                    />\n                ) : (\n                    <IoMenu\n                        size={20}\n                        style={{ cursor: \"pointer\" }}\n                        onClick={onHamburgerBtnOpen}\n                    />\n                )}\n\n                <div\n                    className={`nav__mobileNav__links flex flex-ac flex-dc ${\n                        menu ? \"\" : \"hide\"\n                    }`}\n                >\n                    <NavLinks\n                        currentPage={currentPage}\n                        onPageChange={onPageChange}\n                    />\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Nav;\n","export default __webpack_public_path__ + \"static/media/profile.16fd3c11.jpg\";","import { useEffect } from \"react\";\nimport { FiTwitter, FiGithub } from \"react-icons/fi\";\nimport { BsLinkedin, BsGithub, BsTwitter } from \"react-icons/bs\";\n\nimport { ImFacebook } from \"react-icons/im\";\nimport { HiMail } from \"react-icons/hi\";\nimport { IoLocationSharp } from \"react-icons/io5\";\nimport { changePageState, Page } from \"../Interfaces\";\nimport profile from \"../images/profile.jpg\";\n\nconst Home = ({ setCurrentPage }: changePageState) => {\n    useEffect(() => setCurrentPage(Page.home), [setCurrentPage]);\n    const MAIL = \"musyajuaayush@gmail.com\";\n    const LOCATION = \"Kathmandu, Nepal\";\n\n    return (\n        <div className=\"home flex flex-c flex-ac\">\n            <div className=\"home__left\">\n                <img src={profile} alt=\"\" className=\"home__left__profile\" />\n                <div className=\"home__left__mail flex flex-ac\">\n                    <HiMail className=\"home__left__mail__icon\" />\n                    <span>{MAIL}</span>\n                </div>\n                <div className=\"home__left__location flex flex-ac\">\n                    <IoLocationSharp className=\"home__left__location__icon\" />\n                    <span>{LOCATION}</span>\n                </div>\n            </div>\n\n            <div className=\"home__separator\"></div>\n            <div className=\"home__right\">\n                <div className=\"home__right__intro\">\n                    Hey,<br></br>I'm Aayush musyaju\n                </div>\n                <div className=\"home__right__icons\">\n                    <a href=\"/\" className=\"home__github\">\n                        <BsGithub className=\"icon_test\" />\n                        {\n                            //<FiGithub className=\"icon_test\" fill=\"#000000b8\" />\n                        }\n                    </a>\n                    <a href=\"/\" className=\"home__twitter\">\n                        <BsTwitter className=\"icon_test\" />\n                        {\n                            //<FiTwitter className=\"icon_test\" />\n                        }\n                    </a>\n                    <a href=\"/\" className=\"home__linkedin\">\n                        <BsLinkedin className=\"icon_test\" />\n                    </a>\n                    <a href=\"/\" className=\"home__facebook\">\n                        <ImFacebook className=\"icon_test\" />\n                    </a>\n                </div>\n                <div className=\"home__right__about\">\n                    I am a computer engineering undergraduate who is constantly\n                    eager to learn new things and develop solutions. I would\n                    love to develop products that will help people on thier\n                    daily life. I enjoy working on projects that are meaningful\n                    and impactful to the society. I am a huge fan of the anime\n                    and manga world.\n                    {/* I'm a Product Designer and visual thinker passionate about\n                    humanizing tech experiences and creating thoughtful products\n                    for community and well being. Best paired with this\n                    playlist. */}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/about_img.6549a193.jpg\";","import { useEffect } from \"react\";\nimport ProfileImg from \"../images/about_img.jpg\";\nimport { Page, changePageState } from \"../Interfaces\";\n\nconst About = ({ setCurrentPage }: changePageState) => {\n    useEffect(() => setCurrentPage(Page.about), [setCurrentPage]);\n    return (\n        <div className=\"about\">\n            <div className=\"about__img flex\">\n                <img src={ProfileImg} alt=\"\" />\n            </div>\n            <div className=\"about__description\">\n                <h2 className=\"about__description__heading\">About</h2>\n                <p className=\"about__description__p\">\n                    Hi 👋, I'm Aayush Musyaju. Currently, I am a computer\n                    engineering undergrad. My passion and curiosity for\n                    computers led me to pursue my bachelor's in computer\n                    engineering. During my bachelors, I fell in love with\n                    programming and learning new things every day. I enjoy\n                    confronting challenges, devising solutions, and developing\n                    products that will help people in their daily lives. My\n                    interests do not stop there. I am also interested in deep\n                    learning and cyber security. Basically, I am interested in\n                    everything related to computers 🤣.  \n                    <br />\n                    <br />\n                    Apart from the technical stuff, I love reading manga and\n                    watching anime. I also enjoy making sketches of anime\n                    characters.\n                    {\n                        //<br />\n                        //<br />\n                        //I'm a Product Designer and visual thinker passionate about\n                        //humanizing tech experiences and creating thoughtful products\n                        //for community and well being. Best paired with this\n                        //playlist.\n                    }\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default About;\n","import {\n    FaReact,\n    FaJs,\n    FaHtml5,\n    FaCss3,\n    FaPython,\n    FaJava,\n    FaUserSecret,\n    FaDocker,\n    FaSass,\n    FaTerminal,\n} from \"react-icons/fa\";\nimport { BiGitRepoForked } from \"react-icons/bi\";\nimport { SiVim } from \"react-icons/si\";\n\nimport { SiJupyter, SiTypescript, SiC } from \"react-icons/si\";\n\nconst insertIcon = (lang: string) => {\n    switch (lang) {\n        case \"c\":\n        case \"objective-c\":\n            return (\n                <SiC\n                    size=\"22px\"\n                    className=\"projectCard__lang__c\"\n                    color=\"#5c32bd\"\n                    title={lang}\n                    key={lang}\n                    style={{ opacity: \"0.8\" }}\n                    cursor=\"pointer\"\n                />\n            );\n        case \"shell\":\n            return (\n                <FaTerminal\n                    size=\"22px\"\n                    className=\"projectCard__lang__shell\"\n                    color=\"#3178c6\"\n                    cursor=\"pointer\"\n                    title={lang}\n                    key={lang}\n                />\n            );\n        case \"typescript\":\n            return (\n                <SiTypescript\n                    size=\"22px\"\n                    className=\"projectCard__lang__typescript\"\n                    color=\"#3178c6\"\n                    cursor=\"pointer\"\n                    title={lang}\n                    key={lang}\n                />\n            );\n\n        case \"scss\" || \"sass\":\n            return (\n                <FaSass\n                    size=\"22px\"\n                    className=\"projectCard__lang__scss\"\n                    color=\"#cc6699\"\n                    cursor=\"pointer\"\n                    title={lang}\n                    key={lang}\n                />\n            );\n\n        case \"dockerfile\":\n            return (\n                <FaDocker\n                    size=\"22px\"\n                    className=\"projectCard__lang__docker\"\n                    color=\"#0db7ed\"\n                    cursor=\"pointer\"\n                    title={lang}\n                    key={lang}\n                />\n            );\n\n        case \"react\":\n            return (\n                <FaReact\n                    size=\"22px\"\n                    className=\"projectCard__lang__react\"\n                    color=\"#61DBFB\"\n                    cursor=\"pointer\"\n                    key={lang}\n                />\n            );\n\n        case \"java\":\n            return (\n                <FaJava\n                    size=\"22px\"\n                    className=\"projectCard__lang__react\"\n                    color=\"#f89820\"\n                    cursor=\"pointer\"\n                    key={lang}\n                />\n            );\n\n        case \"python\":\n            return (\n                <FaPython\n                    size=\"22px\"\n                    className=\"projectCard__lang__python\"\n                    color=\"#4B8BBE\"\n                    cursor=\"pointer\"\n                    title={lang}\n                    key={lang}\n                />\n            );\n\n        case \"html\":\n            return (\n                <FaHtml5\n                    size=\"22px\"\n                    className=\"projectCard__lang__html\"\n                    color=\"#e34f26\"\n                    cursor=\"pointer\"\n                    title={lang}\n                    key={lang}\n                />\n            );\n\n        case \"css\":\n            return (\n                <FaCss3\n                    size=\"22px\"\n                    className=\"projectCard__lang__css\"\n                    color=\"#264de4 \"\n                    cursor=\"pointer\"\n                    title={lang}\n                    key={lang}\n                />\n            );\n\n        case \"javascript\":\n            return (\n                <FaJs\n                    size=\"22px\"\n                    className=\"projectCard__lang__js\"\n                    color=\"#F0DB4F\"\n                    cursor=\"pointer\"\n                    title={lang}\n                    key={lang}\n                />\n            );\n\n        case \"jupyter notebook\":\n            return (\n                <SiJupyter\n                    size=\"22px\"\n                    className=\"projectCard__lang__jupyter\"\n                    color=\"#F0DB4F\"\n                    cursor=\"pointer\"\n                    title={lang}\n                    key={lang}\n                />\n            );\n\n        case \"vim script\":\n            return (\n                <SiVim\n                    size=\"22px\"\n                    className=\"projectCard__lang__vim\"\n                    color=\"#20692c\"\n                    cursor=\"pointer\"\n                    title={lang}\n                    key={lang}\n                />\n            );\n\n        case \"fork\":\n            return (\n                <BiGitRepoForked\n                    size=\"22px\"\n                    className=\"projectCard__lang__fork\"\n                    color=\"#000\"\n                    cursor=\"pointer\"\n                    title={lang}\n                    key={lang}\n                />\n            );\n\n        default:\n            return (\n                <FaUserSecret\n                    size=\"22px\"\n                    className=\"projectCard__lang__secret\"\n                    color=\"#5c32bd\"\n                    cursor=\"pointer\"\n                    title={lang}\n                    key={lang}\n                    style={{ opacity: \"0.8\" }}\n                />\n            );\n    }\n};\n\nexport default insertIcon;\n","import { repository } from \"../Interfaces\";\nimport insertIcon from \"../programmingIcon\";\nimport { RiGitRepositoryLine, RiComputerLine } from \"react-icons/ri\";\n\ninterface projectCardProps {\n    repo: repository;\n}\n\nconst ProjectCard = ({ repo }: projectCardProps) => {\n    repo.name = repo.name.replaceAll(\"_\", \" \");\n    repo.name = repo.name.replaceAll(\"-\", \" \");\n    repo.name = repo.name.charAt(0).toUpperCase() + repo.name.slice(1);\n    return (\n        <div className=\"projectCard\">\n            <div className=\"projectCard__title\">{repo.name}</div>\n            <div className=\"projectCard__desc\">{repo.description}</div>\n            <div className=\"projectCard__lang\">\n                {repo.languages.map((lang) => insertIcon(lang.toLowerCase()))}\n                {repo.fork ? insertIcon(\"fork\") : null}\n            </div>\n            <div className=\"projectCard__btn flex flex-ac\">\n                <button\n                    className=\"projectCard__btn__repo flex flex-ac flex-c\"\n                    onClick={() => window.open(repo.url)}\n                >\n                    <RiGitRepositoryLine /> Repository\n                </button>\n                <button\n                    className=\"projectCard__btn__demo flex flex-ac flex-c \"\n                    onClick={() => window.open(repo.homepage)}\n                    disabled={!repo.has_pages}\n                >\n                    <RiComputerLine /> Website\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectCard;\n","import { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\n\nimport { SiReactos } from \"react-icons/si\";\n\nimport ProjectCard from \"./ProjectCard\";\nimport { repository, changePageState, Page } from \"../Interfaces\";\n\n//const endpoint = \"https://api.github.com/graphql\";\n//const KEY = \"bearer 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\";\n//const PROJECTS_QUERY = `\n//{\n//  user(login: \"siki-aayush\") {\n//    repositories(first: 60, privacy: PUBLIC)  {\n//      nodes {\n//        name\n//        description\n//        url\n//        languages(first: 20) {\n//          nodes {\n//            name\n//            color\n//          }\n//        }\n//      }\n//    }\n//  }\n//}\n//`;\n\nconst Projects = ({ setCurrentPage }: changePageState) => {\n  useEffect(() => setCurrentPage(Page.projects), [setCurrentPage]);\n  const { data, isLoading, error } = useQuery<repository[], Error>(\n    \"repos\",\n    async () => {\n      const all_data = await axios({\n        url: \"https://api.github.com/users/siki-aayush/repos\",\n        method: \"GET\",\n        headers: {\n          Accept: \"application/vnd.github.v3+json\",\n          //Authorization: \",\n        },\n      }).then((resp) => resp.data);\n\n      const process_data: repository[] = await Promise.all(\n        all_data.map(async (repo: any) => {\n          const lang = await axios.get(repo.languages_url).then((resp) => {\n            return Object.keys(resp.data);\n          });\n          return {\n            name: repo.name,\n            description: repo.description,\n            url: repo.html_url,\n            languages: lang,\n            has_pages: repo.has_pages,\n            homepage: repo.homepage,\n            fork: repo.fork,\n          };\n        })\n      );\n\n      return process_data;\n      //return axios({\n      //    url: endpoint,\n      //    method: \"POST\",\n      //    headers: {\n      //        Authorization: KEY,\n      //    },\n      //    data: {\n      //        query: PROJECTS_QUERY,\n      //    },\n      //}).then((response) => {\n      //    console.log(response.data.data.user.repositories.nodes);\n      //    return response.data.data.user.repositories.nodes;\n      //});\n    }\n  );\n\n  if (isLoading) return <SiReactos className=\"projects__spinner\" />;\n  if (error) return <div>{error.message}</div>;\n  //return <SiReactos className=\"projects__spinner\" />;\n\n  //const fetchData = async () => {\n  //    await axios({\n  //        url: endpoint,\n  //        method: \"POST\",\n  //        headers: {\n  //            Authorization: KEY,\n  //        },\n  //        data: {\n  //            query: PROJECTS_QUERY,\n  //        },\n  //    }).then((response) => {\n  //        setIsLoading(false);\n  //        setRepos(response.data.data.user.repositories.nodes);\n  //    });\n  //};\n\n  return (\n    <div className=\"projects flex flex-c flex-ac\">\n      {data!.map((repo: repository, index: number) => (\n        <ProjectCard key={repo.name + index} repo={repo} />\n      ))}\n    </div>\n  );\n};\n\nexport default Projects;\n","import { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { Page } from \"./Interfaces\";\nimport Nav from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Projects from \"./components/Projects\";\n\nimport \"./scss/style.scss\";\n\nfunction App() {\n    const [currentPage, setCurrentPage] = useState<Page>(Page.home);\n\n    return (\n        <Router>\n            <div className=\"app\" style={{ height: \"100vh\" }}>\n                <Nav currentPage={currentPage} />\n                <Route\n                    path=\"/about\"\n                    render={(props) => (\n                        <About\n                            {...props}\n                            setCurrentPage={(page: Page) =>\n                                setCurrentPage(page)\n                            }\n                        />\n                    )}\n                    //component={About}\n                />\n                <Route\n                    path=\"/projects\"\n                    render={(props) => (\n                        <Projects\n                            {...props}\n                            setCurrentPage={(page: Page) =>\n                                setCurrentPage(page)\n                            }\n                        />\n                    )}\n                />\n                <Route\n                    path=\"/\"\n                    render={(props) => (\n                        <Home\n                            {...props}\n                            setCurrentPage={(page: Page) =>\n                                setCurrentPage(page)\n                            }\n                        />\n                    )}\n                    exact\n                />\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n    <React.StrictMode>\n        <QueryClientProvider client={queryClient}>\n            <App />\n        </QueryClientProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}